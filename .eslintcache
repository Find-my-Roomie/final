[{"C:\\Users\\장세영\\Desktop\\final\\src\\index.js":"1","C:\\Users\\장세영\\Desktop\\final\\src\\App.js":"2","C:\\Users\\장세영\\Desktop\\final\\src\\reportWebVitals.js":"3","C:\\Users\\장세영\\Desktop\\final\\src\\style\\theme.js":"4","C:\\Users\\장세영\\Desktop\\final\\src\\pages\\LandingPage.js":"5","C:\\Users\\장세영\\Desktop\\final\\src\\pages\\ResultPage.js":"6","C:\\Users\\장세영\\Desktop\\final\\src\\components\\ButtonComponent.js":"7","C:\\Users\\장세영\\Desktop\\final\\src\\pages\\Quiz\\QuizPage.js":"8","C:\\Users\\장세영\\Desktop\\final\\src\\pages\\Quiz\\ProgressBar.js":"9","C:\\Users\\장세영\\Desktop\\final\\src\\components\\Kakao.js":"10","C:\\Users\\장세영\\Desktop\\final\\src\\components\\SYBtnComponent.js":"11","C:\\Users\\장세영\\Desktop\\final\\src\\pages\\contents\\questions.js":"12","C:\\Users\\장세영\\Desktop\\final\\src\\pages\\contents\\results.js":"13","C:\\Users\\장세영\\Desktop\\final\\src\\pages\\AllResultPage.js":"14","C:\\Users\\장세영\\Desktop\\final\\src\\pages\\DeveloperPage.js":"15"},{"size":553,"mtime":1614013749639,"results":"16","hashOfConfig":"17"},{"size":712,"mtime":1614063124596,"results":"18","hashOfConfig":"17"},{"size":375,"mtime":1614013749646,"results":"19","hashOfConfig":"17"},{"size":350,"mtime":1614013749920,"results":"20","hashOfConfig":"17"},{"size":1807,"mtime":1614020157495,"results":"21","hashOfConfig":"17"},{"size":7127,"mtime":1614062360373,"results":"22","hashOfConfig":"17"},{"size":1090,"mtime":1614018818829,"results":"23","hashOfConfig":"17"},{"size":4637,"mtime":1614060744641,"results":"24","hashOfConfig":"17"},{"size":1104,"mtime":1614020191040,"results":"25","hashOfConfig":"17"},{"size":1379,"mtime":1614018575526,"results":"26","hashOfConfig":"17"},{"size":1090,"mtime":1614019479152,"results":"27","hashOfConfig":"17"},{"size":5024,"mtime":1614013749644,"results":"28","hashOfConfig":"17"},{"size":6962,"mtime":1614062235296,"results":"29","hashOfConfig":"17"},{"size":161,"mtime":1614063048826,"results":"30","hashOfConfig":"17"},{"size":164,"mtime":1614063153412,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1dfqxyu",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\장세영\\Desktop\\final\\src\\index.js",[],["68","69"],"C:\\Users\\장세영\\Desktop\\final\\src\\App.js",[],"C:\\Users\\장세영\\Desktop\\final\\src\\reportWebVitals.js",[],"C:\\Users\\장세영\\Desktop\\final\\src\\style\\theme.js",[],"C:\\Users\\장세영\\Desktop\\final\\src\\pages\\LandingPage.js",["70","71"],"import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport ButtonComponent from '../components/ButtonComponent';\r\nimport QuizPage from './Quiz/QuizPage';\r\nimport ResultPage from './ResultPage';\r\n\r\nconst Container = styled.div`\r\n&,\r\n& * {\r\n  box-sizing: border-box;\r\n}\r\n    display: ${props => props.isShow === true ? 'flex' : 'none'};\r\n    flex-direction:column;\r\n    justify-content:center;\r\n    align-items:center;\r\n    background: #C9DECF;\r\n    padding: 10rem;\r\n`\r\nconst Box = styled.div`\r\n    display: ${props => props.isShow === true ? 'flex' : 'none'};\r\n    margin-top:2rem;\r\n    margin-bottom:2rem;\r\n    height:600px;\r\n    background-color: white;\r\n    border-radius: 2rem;\r\n    width: 400px;\r\n    margin:0 auto;\r\n    flex-direction:column;\r\n    justify-content:center;\r\n    align-items:center;\r\n    border: 4px double #F1BCAE;\r\n    \r\n    padding:10px;\r\n`\r\nconst Text = styled.div`\r\n    margin-top: 2 rem;\r\n    margin-bottom:2rem;\r\n    text-align: center;\r\n    font-family:'Spoqa-Han-Sans';\r\n    font-weight:700;\r\n    font-size:2rem;\r\n`\r\n\r\nfunction LandingPage() {\r\n\r\n    const [isShow, setIsShow] = useState(true);\r\n    const [isQuizShow, setIsQuizShow] = useState(false);\r\n\r\n\r\n    //테스트 시작 버튼 클릭\r\n\r\n    const onClickStartBtn = () => {\r\n        setIsShow(false);\r\n        setIsQuizShow(true);\r\n    }\r\n    return (\r\n        <>\r\n\r\n            <Container isShow={isShow}>\r\n                <Box isShow={isShow}>\r\n                    <Text>나는 어떤 유형의 룸메이트일까?</Text>\r\n                    <ButtonComponent type={true} text={\"시작하기\"} onclick={onClickStartBtn} />\r\n                </Box>\r\n            </Container>\r\n            <QuizPage isShow={isQuizShow} />\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LandingPage;","C:\\Users\\장세영\\Desktop\\final\\src\\pages\\ResultPage.js",["72","73","74"],"import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Parser from 'html-react-parser';\r\nimport CopyToClipboard from \"react-copy-to-clipboard\";\r\nimport results from './contents/results';\r\nimport KakaoShareBtn from '../components/Kakao';\r\nimport LinkCopyBtn from '../assets/btn/btn_link.svg';\r\nimport ButtonComponent from '../components/SYBtnComponent';\r\nimport cry from '../assets/result/pic_cry.svg';\r\n\r\nconst Wrapper = styled.div`\r\n    display: ${props => props.isShow === true ? 'flex' : 'none'};\r\n    width:100%;\r\n    background-color:${props => props.backgroundColor};\r\n\r\n    flex-direction:column;\r\n    align-items:center;\r\n`\r\n\r\nconst Container = styled.div`\r\n    margin-top:8.6rem;\r\n    margin-bottom:3rem;\r\n`\r\n\r\nconst ResultSub = styled.div`\r\n    font-family:'Spoqa-Han-Sans';\r\n    font-size:1.4rem;\r\n    font-weight:400;\r\n    text-align:center;\r\n    color:white;\r\n`\r\n\r\nconst ResultTitle = styled.div`\r\n    font-family:'Jalnan';\r\n    font-size:4.5rem;\r\n    text-align:center;\r\n    color:white;\r\n    margin-top:1.9rem;\r\n    margin-bottom:15.4rem;\r\n`\r\n\r\nconst ResultImg = styled.img`\r\n    position:absolute;\r\n    width:${props => props.isNormal < 16 ? '36.624rem' : '6rem'};\r\n    //src:${props => props.imgLink};\r\n`\r\n\r\nconst Content = styled.div`\r\n    position:absolute;\r\n    font-family:'Spoqa-Han-Sans';\r\n    font-size:1.2rem;\r\n    color:black;\r\n`\r\n\r\nconst ResultSquare = styled.div`\r\n    position:relative;\r\n    display:flex;\r\n    margin:2.2rem;\r\n\r\n    width: 33.1rem;\r\n    height:${props => props.isNormal < 16 ? '51.5rem' : '22.9rem'};\r\n    background-color:white;\r\n    border-radius: 0.5rem;\r\n\r\n    ${ResultImg}{\r\n        justify-content:center;\r\n        bottom:${props => props.isNormal < 16 ? '34rem' : ''};\r\n        top:${props => props.isNormal < 16 ? '' : '-11rem'};\r\n        left:${props => props.isNormal < 16 ? '-1.6rem' : '13rem'};\r\n    }\r\n\r\n    ${Content}{\r\n        bottom:2.6rem;\r\n        margin-left:3.2rem;\r\n        margin-right:3.2rem;\r\n    }\r\n`\r\n\r\nconst NormalResult = styled.div`\r\n    display : ${props => props.isNormal < 16 ? 'show' : 'none'};\r\n`\r\n\r\nconst Title = styled.div`\r\n    font-family:'Jalnan';\r\n    font-size:1.6rem;\r\n    text-align:center;\r\n    color:white;\r\n    margin-top:4.1rem;\r\n`\r\n\r\nconst FlexLayout = styled.div`\r\n    display:flex;\r\n    justify-content:center;\r\n    margin-left:2.2rem;\r\n    margin-right:2.2rem;\r\n`\r\n\r\nconst MatchElement = styled.div`\r\n    width:100%;\r\n    display:flex;\r\n    flex-direction:column;\r\n    align-items:center;\r\n    justify-content:space-between;\r\n`\r\n\r\nconst EmptyPlace = styled.div`\r\n    width:2rem;\r\n`\r\n\r\nconst SubTitle = styled.div`\r\n    font-family:'Jalnan';\r\n    font-size:1.4rem;\r\n    text-align:center;\r\n    color:white;\r\n    margin-top:3.4rem;\r\n    margin-bottom:1.3rem;\r\n`\r\n\r\nconst SmallSub = styled.div`\r\n    text-align:center;\r\n    font-family:'Spoqa-Han-Sans';\r\n    font-weight:400;\r\n    font-size:1.1rem;\r\n    color:black;\r\n`\r\n\r\nconst SmallTitle = styled.div`\r\n    text-align:center;\r\n    font-family:'Jalnan';\r\n    font-weight:400;\r\n    font-size:1.8rem;\r\n    color:black;\r\n`\r\n\r\nconst MatchImg = styled.div`\r\n    background-image:url(${props => props.src});\r\n`\r\n\r\nconst MatchSqaure = styled.div`\r\n    position:relative;\r\n    width:100%;\r\n    height:22.9rem;\r\n    background-color:white;\r\n    border-radius: 0.5rem;\r\n\r\n    ${SmallSub}{\r\n        margin-top:2.6rem;\r\n    }\r\n\r\n    ${SmallTitle}{\r\n        margin-top:1.3rem;\r\n    }\r\n\r\n    ${MatchImg}{\r\n        margin-top:0.6rem;\r\n    }\r\n\r\n`\r\n\r\nconst ShareSquare = styled.div`\r\n    width:100%;\r\n    height:20.8rem;\r\n    background-color:white;\r\n    border-radius: 0.5rem;\r\n    margin-top:1.7rem;\r\n\r\n    display:flex;\r\n    flex-direction:column;\r\n    align-items:center;\r\n`\r\n\r\nconst Button = styled.button`\r\n    border: none;\r\n    outline:none;\r\n    background-color:white;\r\n    cursor:pointer;\r\n`\r\n\r\nconst DeveloperPageLink = styled.div`\r\n    color: '#1F1F1F';\r\n    text-align:center;\r\n    font-family:'Spoqa-Han-Sans';\r\n    font-weight:400;\r\n    font-size:1.2rem;\r\n    margin-top:6.3rem;\r\n`\r\n\r\nfunction ResultPage({ isShow, finalType }) {\r\n\r\n    const link = window.location.href;\r\n    const alertMessage = () => {\r\n        alert(\"링크가 복사되었어요!\");\r\n    }\r\n\r\n    return (\r\n        <Wrapper isShow={isShow} backgroundColor={results[finalType].color}>\r\n            <Container>\r\n                <ResultSub>{Parser(results[finalType].title)}</ResultSub>\r\n                <ResultTitle>{results[finalType].name}</ResultTitle>\r\n                <ResultSquare isNormal={finalType}>\r\n                    <ResultImg isNormal={finalType} src={cry} />\r\n                    <Content>{Parser(results[finalType].description)}</Content>\r\n                </ResultSquare>\r\n\r\n                <NormalResult isNormal={finalType}>\r\n                    <Title>🏠 혹시, 룸메이트를 찾고 있나요?</Title>\r\n                    <FlexLayout>\r\n                        <MatchElement>\r\n                            <SubTitle>잘 맞고 좋네요~</SubTitle>\r\n                            <MatchSqaure>\r\n                                <SmallSub>{Parser(results[results[finalType].best].title)}</SmallSub>\r\n                                <SmallTitle>{results[results[finalType].best].name}</SmallTitle>'\r\n                            <MatchImg src={results[results[finalType].best].img} />\r\n                            </MatchSqaure>\r\n                        </MatchElement>\r\n                        <EmptyPlace />\r\n                        <MatchElement>\r\n                            <SubTitle>췌h악잇^^엡욧</SubTitle>\r\n                            <MatchSqaure>\r\n                                <SmallSub>{Parser(results[results[finalType].worst].title)}</SmallSub>\r\n                                <SmallTitle>{results[results[finalType].worst].name}</SmallTitle>\r\n                                <MatchImg src={results[results[finalType].worst].img} />\r\n                            </MatchSqaure>\r\n                        </MatchElement>\r\n                    </FlexLayout>\r\n                </NormalResult>\r\n\r\n                <Title>👍 친구에게 결과 공유하기</Title>\r\n                <FlexLayout>\r\n                    <ShareSquare>\r\n                        <FlexLayout>\r\n                            <KakaoShareBtn _title={results[finalType].name} _desc={results[finalType].description} _imageUrl={results[finalType].img} />\r\n                            <CopyToClipboard text={link}>\r\n                                <Button onClick={alertMessage}><img src={LinkCopyBtn} /></Button>\r\n                            </CopyToClipboard>\r\n                        </FlexLayout>\r\n                        <ButtonComponent type={true} text={'테스트 다시 하기'} />\r\n                        <ButtonComponent type={false} text={'다른 룸메이트 유형 구경하기'} />\r\n                    </ShareSquare>\r\n                </FlexLayout>\r\n\r\n                <DeveloperPageLink>집 주인은 어떤 사람인지 궁금하다면? 클릭!</DeveloperPageLink>\r\n            </Container>\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\nexport default ResultPage;","C:\\Users\\장세영\\Desktop\\final\\src\\components\\ButtonComponent.js",[],"C:\\Users\\장세영\\Desktop\\final\\src\\pages\\Quiz\\QuizPage.js",["75","76"],"import React, { useEffect, useState, setState } from 'react';\r\nimport styled from 'styled-components';\r\nimport ResultPage from '../ResultPage';\r\nimport ButtonComponent from '../../components/ButtonComponent';\r\nimport contents from '../contents/questions';\r\nimport ProgressBar from './ProgressBar.js';\r\nimport Parser from 'html-react-parser';\r\n\r\nconst Container = styled.div`\r\n&,\r\n& * {\r\n  box-sizing: border-box;\r\n}\r\n    display: ${props => props.isShow === true ? 'flex' : 'none'};\r\n    display:flex;\r\n    justify-content:center;\r\n    align-items:center;\r\n    background:#C9DECF;\r\n\r\n    padding: 10rem;\r\n \r\n`\r\nconst Box = styled.div`\r\n    display: ${props => props.isShow === true ? 'flex' : 'none'};\r\n    margin-top:2rem;\r\n    margin-bottom:2rem;\r\n    height:600px;\r\n    background-color: white;\r\n    border-radius: 2rem;\r\n    width: 400px;\r\n    margin:0 auto;\r\n    flex-direction:column;\r\n    justify-content:center;\r\n    align-items:center;\r\n    border: 4px double #FF9999;\r\n    text-align:center;\r\n    padding:10px;\r\n`\r\n\r\nconst Text = styled.div`\r\n    font-family:'Spoqa-Han-Sans';\r\n    font-weight:700;\r\n    font-size:2rem;\r\n    margin-bottom: 6.5rem;\r\n    align-items:center;    \r\n`\r\n\r\nfunction QuizPage({ isShow }) {\r\n    const [questionNum, setQuestionNum] = useState(0);\r\n    const [isProcess, setIsProcess] = useState(false);\r\n    const [isResultShow, setIsResultShow] = useState(false);\r\n\r\n    const [typeOne, setTypeOne] = useState(0);\r\n    const [typeTwo, setTypeTwo] = useState(0);\r\n    const [typeThree, setTypeThree] = useState(0);\r\n    const [typeFour, setTypeFour] = useState(0);\r\n    const [finalType, setFinalType] = useState(0);\r\n    const [turn, setTurn] = useState(0);\r\n\r\n\r\n    const onConditionChange = (key) => {\r\n\r\n        let record = contents[questionNum].weight * contents[questionNum].answers[key].score; //dhld\r\n        if (questionNum === 3 && key === 2) {\r\n            setIsProcess(true);\r\n            setFinalType(16);\r\n        }\r\n        else if (questionNum === 0 || questionNum === 1) {\r\n            setTypeOne(typeOne + record);\r\n        } else if (questionNum === 2 || questionNum === 3 || questionNum === 4) {\r\n            setTypeTwo(typeTwo + record);\r\n        } else if (questionNum === 5 || questionNum === 6 || questionNum === 7) {\r\n            setTypeThree(typeThree + record);\r\n        } else if (questionNum === 8 || questionNum === 9) {\r\n            setTypeFour(typeFour + record);\r\n            if (questionNum === 9) {\r\n                findResult();\r\n                setQuestionNum(0);\r\n                setIsProcess(true);\r\n            }\r\n        }\r\n        setQuestionNum(questionNum + 1);\r\n        setTurn(turn + 1);\r\n\r\n    }\r\n    const findResult = () => {\r\n        var result = 0;\r\n\r\n        if (typeOne >= 5) {\r\n            result = result + 1\r\n        }\r\n        if (typeTwo >= 5) {\r\n            result = result + 2\r\n        }\r\n        if (typeThree >= 5) {\r\n            result = result + 4\r\n        }\r\n        if (typeFour >= 5) {\r\n            result = result + 8\r\n        }\r\n        setFinalType(result);\r\n\r\n    };\r\n\r\n    const onClickResultBtn = () => {\r\n        setIsProcess(false);\r\n        setIsResultShow(true);\r\n        setQuestionNum(16);\r\n    }\r\n\r\n    if (questionNum === 10 || isProcess) {\r\n        return (\r\n            <>\r\n                <Container isShow={isProcess}>\r\n                    <Box isShow={isProcess}>\r\n                        <Text>테스트 완료! </Text>\r\n                        <ButtonComponent text=\"결과 확인하기🐾\" onclick={onClickResultBtn}></ButtonComponent>\r\n                        <Text>{finalType}</Text>\r\n                    </Box>\r\n                </Container>\r\n\r\n            </>);\r\n    } else if (questionNum < 10) {\r\n        return (\r\n            <>\r\n\r\n                <Container isShow={isShow}>\r\n                    <Box isShow={isShow}>\r\n                        <ProgressBar completed={(questionNum + 1) * 10} rotation={turn} />\r\n                        <Text>{Parser(contents[questionNum].question)} </Text>\r\n                        {contents[questionNum].answers.map((answer, i) => (\r\n                            <ButtonComponent\r\n                                key={'answer-' + i}\r\n                                idx={i}\r\n                                text={Parser(answer.text)}\r\n                                onclick={onConditionChange}\r\n                            />\r\n                        ))}\r\n                    </Box>\r\n                </Container>\r\n            </>\r\n        );\r\n    } else {\r\n        return (<ResultPage isShow={isResultShow} finalType={finalType} />);\r\n    }\r\n}\r\n\r\nexport default QuizPage;","C:\\Users\\장세영\\Desktop\\final\\src\\pages\\Quiz\\ProgressBar.js",["77"],"import ewhasymbol from '../../assets/ewhasymbol.png';\r\n\r\nconst ProgressBar = (props) => {\r\n  const { completed } = props;\r\n  const { rotation } = props;\r\n\r\n  const containerStyles = {\r\n    height: '25px',\r\n    width: '250px',\r\n    backgroundColor: \"#e0e0de\",\r\n    borderRadius: 50,\r\n    margin: '10px auto'\r\n  }\r\n\r\n  const fillerStyles = {\r\n    height: '100%',\r\n    width: `${completed}%`,\r\n    //background: 'linear-gradient(to left, #126424, #76dfe2)',\r\n    //boxShadow: '0 3px 3px -5px #a2d8e6, 0 2px 5px #3c7c33',\r\n    background: 'linear-gradient(to left, #F2709C, #FF9472)',\r\n    boxShadow: '0 3px 3px -5px #F2709C, 0 2px 5px #F2709C',\r\n    borderRadius: '20px',\r\n    transition: '1s ease 0.005s'\r\n  }\r\n\r\n\r\n  const imgStyles = {\r\n    width: '33px',\r\n    height: '33px',\r\n    marginLeft: `${(completed) * 2.5 - 20}px`,\r\n    transform: `rotate(${rotation}turn)`,\r\n    transition: 'all ease 1s'\r\n  }\r\n\r\n  return (\r\n    <div style={containerStyles}>\r\n      <div style={fillerStyles}>\r\n        <img src={ewhasymbol} style={imgStyles} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgressBar;","C:\\Users\\장세영\\Desktop\\final\\src\\components\\Kakao.js",["78","79","80"],"import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport kakao from '../assets/btn/btn_kakao.svg';\r\n\r\nconst { Kakao } = window;\r\n\r\nconst ShareBtn = styled.button`\r\n  cursor: pointer;\r\n  outline: none;\r\n  background: none;\r\n  border: none;\r\n\r\n  margin-right:1.6rem;\r\n  margin-top: 1.6rem;\r\n  margin-bottom: 1.6rem;\r\n`;\r\n\r\nfunction KaKao({ _title, _desc, _imageUrl }) {\r\n\r\n    const onHandleShareKaKao = () => {\r\n        Kakao.Link.sendDefault({\r\n            objectType: 'feed',\r\n            content: {\r\n                title: _title,\r\n                description: _desc,\r\n                imageUrl: _imageUrl,\r\n                link: {\r\n                    mobileWebUrl: '나중에 링크 넣기',\r\n                }\r\n            },\r\n            social: {\r\n                likeCount: 286,\r\n                commentCount: 45,\r\n                sharedCount: 845\r\n            },\r\n            buttons: [\r\n                {\r\n                    title: '내 룸메이트 유형은? 테스트 해보기',\r\n                    link: {\r\n                        mobileWebUrl: '나중에 링크 넣기',\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n    };\r\n\r\n    return (\r\n        <ShareBtn value=\"KaKao\" onClick={onHandleShareKaKao} >\r\n            <img src={kakao} />\r\n        </ShareBtn>\r\n    );\r\n}\r\n\r\nexport default KaKao;","C:\\Users\\장세영\\Desktop\\final\\src\\components\\SYBtnComponent.js",[],"C:\\Users\\장세영\\Desktop\\final\\src\\pages\\contents\\questions.js",[],"C:\\Users\\장세영\\Desktop\\final\\src\\pages\\contents\\results.js",[],"C:\\Users\\장세영\\Desktop\\final\\src\\pages\\AllResultPage.js",[],"C:\\Users\\장세영\\Desktop\\final\\src\\pages\\DeveloperPage.js",[],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":26},{"ruleId":"85","severity":1,"message":"89","line":5,"column":8,"nodeType":"87","messageId":"88","endLine":5,"endColumn":18},{"ruleId":"85","severity":1,"message":"86","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":26},{"ruleId":"85","severity":1,"message":"90","line":1,"column":28,"nodeType":"87","messageId":"88","endLine":1,"endColumn":36},{"ruleId":"91","severity":1,"message":"92","line":234,"column":64,"nodeType":"93","endLine":234,"endColumn":89},{"ruleId":"85","severity":1,"message":"86","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":26},{"ruleId":"85","severity":1,"message":"94","line":1,"column":38,"nodeType":"87","messageId":"88","endLine":1,"endColumn":46},{"ruleId":"91","severity":1,"message":"92","line":38,"column":9,"nodeType":"93","endLine":38,"endColumn":51},{"ruleId":"85","severity":1,"message":"90","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":25},{"ruleId":"85","severity":1,"message":"86","line":1,"column":27,"nodeType":"87","messageId":"88","endLine":1,"endColumn":36},{"ruleId":"91","severity":1,"message":"92","line":49,"column":13,"nodeType":"93","endLine":49,"endColumn":32},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'ResultPage' is defined but never used.","'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setState' is defined but never used.","no-global-assign","no-unsafe-negation"]